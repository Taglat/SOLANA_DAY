#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è in-memory –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json

API_BASE = "http://127.0.0.1:8001/api/v1"

def get_database_status():
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üóÑÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ in-memory –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ API
    try:
        health_response = requests.get(f"{API_BASE.replace('/api/v1', '')}/health")
        if health_response.status_code == 200:
            health_data = health_response.json()
            print(f"‚úÖ API: {health_data['status']}")
            print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {health_data['database']}")
        else:
            print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return
    
    print("\n" + "=" * 50)
    print("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ—à–µ–ª—å–∫–∏
    test_wallets = [
        "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM",  # –ê–ª–∏—Å–∞
        "7Xy9K2mN8pQ4rS6tU1vW3xY5zA7bC9dE2fG4hI6jK8lM",  # –ë–æ–±
        "3FgH5iJ9kL2mN6oP8qR1sT4uV7wX0yZ3aB5cD8eF1gH4iJ",  # –ö–∞—Ä–æ–ª–∏–Ω–∞
        "1AbC3dE5fG7hI9jK2lM4nO6pQ8rS0tU3vW5xY7zA9bC1dE"   # –î–º–∏—Ç—Ä–∏–π
    ]
    
    user_names = ["–ê–ª–∏—Å–∞ (VIP)", "–ë–æ–± (–Ω–æ–≤–∏—á–æ–∫)", "–ö–∞—Ä–æ–ª–∏–Ω–∞ (–∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä)", "–î–º–∏—Ç—Ä–∏–π (–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π)"]
    
    for i, wallet in enumerate(test_wallets):
        name = user_names[i] if i < len(user_names) else f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {i+1}"
        print(f"\nüë§ {name}")
        print(f"   –ö–æ—à–µ–ª–µ–∫: {wallet[:12]}...{wallet[-8:]}")
        
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å
        try:
            balance_response = requests.get(f"{API_BASE}/user-balance/{wallet}")
            if balance_response.status_code == 200:
                balance_data = balance_response.json()
                print(f"   üí∞ –¢–æ–∫–µ–Ω–æ–≤: {balance_data['balance']}")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {balance_response.status_code}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –ü–æ–ª—É—á–∞–µ–º NFT –∫–æ–ª–ª–µ–∫—Ü–∏—é
        try:
            collection_response = requests.get(f"{API_BASE}/coffee-nft/coffee-collection/{wallet}")
            if collection_response.status_code == 200:
                collection = collection_response.json()
                print(f"   üñºÔ∏è NFT: {collection['owned_count']}/{collection['total_puzzles']} ({collection['completion_percentage']:.1f}%)")
                
                if collection['owned_puzzles']:
                    nft_names = [p['name'] for p in collection['owned_puzzles']]
                    print(f"   üìã –°–æ–±—Ä–∞–Ω–æ: {', '.join(nft_names)}")
                else:
                    print(f"   üìã –°–æ–±—Ä–∞–Ω–æ: –Ω–µ—Ç NFT")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {collection_response.status_code}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def get_receipts_info():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–µ–∫–∞—Ö"""
    print("\n" + "=" * 50)
    print("üßæ –ß–µ–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ")
    print("=" * 50)
    
    try:
        receipts_response = requests.get(f"{API_BASE}/receipts/my")
        if receipts_response.status_code == 200:
            receipts = receipts_response.json()
            print(f"üìä –í—Å–µ–≥–æ —á–µ–∫–æ–≤: {len(receipts)}")
            
            scanned_count = sum(1 for r in receipts if r.get('is_scanned', False))
            print(f"‚úÖ –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {scanned_count}")
            print(f"‚è≥ –û–∂–∏–¥–∞–µ—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {len(receipts) - scanned_count}")
            
            if receipts:
                print(f"\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —á–µ–∫–∏:")
                for i, receipt in enumerate(receipts[-5:]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
                    status = "‚úÖ –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω" if receipt.get('is_scanned', False) else "‚è≥ –û–∂–∏–¥–∞–µ—Ç"
                    print(f"   {i+1}. ${receipt['amount_usd']} - {status}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ–∫–æ–≤: {receipts_response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def get_nft_collection_info():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ NFT –∫–æ–ª–ª–µ–∫—Ü–∏–∏"""
    print("\n" + "=" * 50)
    print("üñºÔ∏è NFT –ö–æ–ª–ª–µ–∫—Ü–∏—è")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        init_response = requests.post(f"{API_BASE}/coffee-nft/init-coffee-collection")
        if init_response.status_code == 200:
            init_data = init_response.json()
            print(f"‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞: {init_data['puzzles_created']} –ø–∞–∑–ª–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {init_response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    print("üîç –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Coffee Loyalty")
    print("=" * 60)
    
    get_database_status()
    get_receipts_info()
    get_nft_collection_info()
    
    print("\n" + "=" * 60)
    print("üí° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    print("   ‚Ä¢ –¢–∏–ø: In-Memory (–≤ –ø–∞–º—è—Ç–∏)")
    print("   ‚Ä¢ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞")
    print("   ‚Ä¢ –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ—Ä—è—é—Ç—Å—è")
    print("   ‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("\nüì± –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    print("   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ http://10.25.0.47:3000")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±–æ–π –∏–∑ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤")
    print("   ‚Ä¢ –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

if __name__ == "__main__":
    main()
